@model GrygierSite.Core.ViewModels.ProductFormViewModel

@{
    ViewBag.Title = Model.Title;
}

<h2>@Model.Title</h2>

@using (Html.BeginForm(Model.Action, "Products", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <p class="alert alert-info">All fields are required</p>
    @Html.AntiForgeryToken()
    <div class="form-group">
        @Html.LabelFor(vm => vm.Product.Name)
        @Html.TextBoxFor(vm => vm.Product.Name, new { @class = "form-control", autofocus = "autofocus", placeholder = "Fantasy backgrounds" })
        @Html.ValidationMessageFor(vm => vm.Product.Name)
    </div>
    <div class="form-group">
        @Html.LabelFor(vm => vm.Product.Description)
        @Html.TextAreaFor(vm => vm.Product.Description, new { @class = "form-control", placeholder = "The package contains 4 backgrounds in fantasy theme... " })
        @Html.ValidationMessageFor(vm => vm.Product.Description)
    </div>
    <div class="form-group">
        @Html.LabelFor(vm => vm.Product.CategoryId)
        @Html.DropDownListFor(vm => vm.Product.CategoryId, new SelectList(Model.Categories, "Id", "Name"), "", new { @class = "form-control" })
        @Html.ValidationMessageFor(vm => vm.Product.CategoryId)
    </div>
    <div class="form-group">
        @Html.LabelFor(vm => vm.Thumbnail)
        <input type="file" name="Thumbnail" id="Thumbnail" value="Browse" />
        @Html.ValidationMessageFor(vm => vm.Thumbnail)
    </div>
    <div class="form-group">
        @Html.LabelFor(vm => vm.Product.MarketUrl)
        @Html.TextBoxFor(vm => vm.Product.MarketUrl, new { @class = "form-control", placeholder = "https://graphicriver.net/..." })
        @Html.ValidationMessageFor(vm => vm.Product.MarketUrl)
    </div>
    <div class="form-group">
        @Html.LabelFor(vm => vm.Product.Price)
        @Html.TextBoxFor(vm => vm.Product.Price, new { @class = "form-control", placeholder = "0,00" })
        @Html.ValidationMessageFor(vm => vm.Product.Price)
    </div>
    <div class="form-group">
        <label>Tag</label>
        <input id="tag" name="tag" type="text" class="form-control" />
    </div>
    <div class="row">
        <div class="col-md-4 col-sm-6">
            <ul required id="tags" class="list-group"></ul>
        </div>
    </div>
        @Html.HiddenFor(vm => vm.Product.Id)

        <button type="submit" class="btn btn-primary">Save</button>
}

@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        $(document).ready(function () {

            var tags = new Bloodhound({
                datumTokenizer: Bloodhound.tokenizers.obj.whitespace('name'),
                queryTokenizer: Bloodhound.tokenizers.whitespace,
                remote: {
                    url: '../api/tags/?query=%QUERY',
                    wildcard: '%QUERY'
                }
            });

            //TODO: Prevent choosing tag that are already chosen
            //TODO: Add possibility to remove tag (small X icon at the right)
            var tagIterator = 0;
            $('#tag').typeahead({
                highlight: true
            },
                {
                    name: 'tags',
                    display: 'name',
                    source: tags
                }).on("typeahead:select",
                function (e, tag) { 
                    $("#tags").append("<li class='list-group-item''>" + tag.name + "</li>");
                    $("form").append("<input name='Product.Tags[" + tagIterator + "].Name' type='hidden' value='" + tag.name + "'/>");
                    $("form").append("<input name='Product.Tags[" + tagIterator + "].Id' type='hidden' value='" + tag.id + "'/>");
                    $("#tag").typeahead("val", "");
                    tagIterator++;
                });
        });
    </script>
}
