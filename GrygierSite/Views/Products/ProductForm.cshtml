@model GrygierSite.Core.ViewModels.ProductFormViewModel

@{
    ViewBag.Title = Model.Title;
}

<h2>@Model.Title</h2>

@using (Html.BeginForm(Model.Action, "Products", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <p class="alert alert-info">All fields are required</p>
    @Html.AntiForgeryToken()
    <div class="form-group">
        @Html.LabelFor(vm => vm.Name)
        @Html.TextBoxFor(vm => vm.Name, new { @class = "form-control", autofocus = "autofocus", placeholder = "Fantasy backgrounds" })
        @Html.ValidationMessageFor(vm => vm.Name)
    </div>
    <div class="form-group">
        @Html.LabelFor(vm => vm.Description)
        @Html.TextAreaFor(vm => vm.Description, new { @class = "form-control", placeholder = "The package contains 4 backgrounds in fantasy theme... " })
        @Html.ValidationMessageFor(vm => vm.Description)
    </div>
    <div class="form-group">
        @Html.LabelFor(vm => vm.CategoryId)
        @Html.DropDownListFor(vm => vm.CategoryId, new SelectList(Model.Categories, "Id", "Name"), "", new { @class = "form-control" })
        @Html.ValidationMessageFor(vm => vm.CategoryId)
    </div>
    <div class="form-group">
        @Html.LabelFor(vm => vm.Thumbnail)
        <input type="file" name="Thumbnail" id="Thumbnail" value="Browse" />
        @Html.ValidationMessageFor(vm => vm.Thumbnail)
    </div>
    <div class="form-group">
        @Html.LabelFor(vm => vm.MarketUrl)
        @Html.TextBoxFor(vm => vm.MarketUrl, new { @class = "form-control", placeholder = "https://graphicriver.net/..." })
        @Html.ValidationMessageFor(vm => vm.MarketUrl)
    </div>
    <div class="form-group">
        @Html.LabelFor(vm => vm.Price)
        @Html.TextBoxFor(vm => vm.Price, new { @class = "form-control", placeholder = "0,00" })
        @Html.ValidationMessageFor(vm => vm.Price)
    </div>
    <div class="form-group">
        <label>Tag</label>
        <input id="tag" name="tag" type="text" class="form-control" />
        @Html.ValidationMessageFor(vm => vm.TagIds)
    </div>

    <div class="row">
        <div class="col-md-4 col-sm-6">
            <ul id="tags" name="TagIds" class="list-group"></ul>
        </div>
    </div>
    <div id="tag-ids" name="TagIds"></div>
    

    @Html.HiddenFor(vm => vm.Id)

    <button type="submit" class="btn btn-primary">Save</button>
}

@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        $(document).ready(function () {

            var tags = new Bloodhound({
                datumTokenizer: Bloodhound.tokenizers.obj.whitespace('name'),
                queryTokenizer: Bloodhound.tokenizers.whitespace,
                remote: {
                    url: '/api/tags/?query=%QUERY',
                    wildcard: '%QUERY'
                }
            });

            var tagIterator = 0;
            var tagIds = [];

            $('#tag').typeahead({
                highlight: true
            },
                {
                    name: 'tags',
                    display: 'name',
                    source: tags
                }).on("typeahead:select",
                function (e, tag) {
                    if (tagIterator > 5)
                        toastr.error("Number of tags can't be higher than 6.");
                    else if ($.inArray(tag.id, tagIds) !== -1)
                        toastr.error("Selected tag was already chosen.");
                    else {

                        $("#tags").append("<li class='list-group-item''>" +
                            tag.name +
                            "<button type='button' id='" + tagIterator + "' class='btn-link pull-right js-remove-tag'>" +
                            "<span class='glyphicon glyphicon-remove' aria-hidden='true'></span>" +
                            "</button></li>");

                        $("#tag-ids").append("<input id='" + tagIterator + "' name='TagIds[" +
                            tagIterator +
                            "]' type='hidden' value='" +
                            tag.id +
                            "'/>");
                        $("#tag").typeahead("val", "");
                        tagIds[tagIterator] = tag.id;
                        tagIterator++;
                    }
                });

            $('ul').on('click', '.js-remove-tag', function () {
                var inputToRemove = $(this).attr('id');

                $(this).parent().remove();
                $("#" + inputToRemove).remove();


                tagIterator = 0;
                $('#tag-ids').children('input').each(function () {
                    $(this).attr('name', 'TagIds[' + tagIterator + "]");
                    $(this).attr('id', tagIterator);
                    tagIds[$(this).attr('value')] = 0;
                    tagIterator++;
                });

                tagIterator = 0;
                $('#tags button').each(function () {
                    $(this).attr('id', tagIterator);
                    tagIterator++;
                });
            });
        });
    </script>
}
