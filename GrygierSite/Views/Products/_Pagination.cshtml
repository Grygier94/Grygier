@model GrygierSite.Core.ViewModels.ShowProductsViewModel

@{
    //Lowest page number showing on pagination bar (first page or 2 less than current page)
    var firstNavPage = Model.CurrentPage - 2 < 1 ? 1 : Model.CurrentPage - 2;

    //Highest page number showing on pagination bar (last page or 2 more than current page)
    int lastNavgPage = Model.CurrentPage + 2 > Model.TotalPages ? Model.TotalPages : Model.CurrentPage + 2;
}

@if (Model.TotalPages > 1)
{
    <nav class="nav-pagination" aria-label="Page navigation">
        <ul class="pagination">
            @if (Model.CurrentPage != 1)
            {
                <li>
                    <a href="@Url.Action(Model.Action, "Products", new { category = Model.Category, tagName = Model.TagName, page = Model.CurrentPage - 1 })" aria-label="Previous">
                        <span aria-hidden="true">&laquo;</span>
                    </a>
                </li>
            }
            @for (int i = firstNavPage; i <= lastNavgPage; i++)
                {
                    string active = i == Model.CurrentPage ? "active" : null;

                <li class="@active">
                    @if (i != Model.CurrentPage)
                    {
                        @Html.ActionLink(i.ToString(), Model.Action, new { category = Model.Category, tagName = Model.TagName, page = i })
                    }
                    else
                    {
                        <a href="#">@Model.CurrentPage</a>
                    }
                </li>
            }

            @if (Model.CurrentPage != Model.TotalPages)
            {
                <li>
                    <a href="@Url.Action(Model.Action, "Products", new { category = Model.Category, tagName = Model.TagName, page = Model.CurrentPage + 1 })" aria-label="Next">
                    <span aria-hidden="true">&raquo;</span>
                    </a>
                </li>
            }
        </ul>
    </nav>
}